#!/bin/bash

#@file
#Manages the solr cores

# Libs
source ~/.bash_functions/msgs
source ~/.bash_functions/get_site


# Settings
solr_home="/Library/Tomcat/solr"
if [ "${2}" == "this" ]; then
  site_name=$(get_site)
  if [ -z "${site_name}" ]; then
    exit 1
  fi
  core=${solr_home}/${site_name}
else
  core=${solr_home}/${2}
fi
err="First argument should be 'create', 'destroy', or 'list'.
  Second argument should be core name.
  Third argument is optional conf folder for core."


# Checks
if [ -z "${2}" ] && [ "${1}" != "list" ]; then
  bad_msg "${err}"
  exit 1
fi


# Gooo
case "${1}" in
  'create')
    if [ -e ${core} ]; then
      bad_msg "${core} already exists as a Solr core."
      exit 1
    fi

    if [ -z ${3} ]; then
      solr_conf=${solr_home}/example_conf
    else
      if [ ! -d ${3} ]; then
        bad_msg "${3} is not a directory."
        exit 1
      fi
      solr_conf=${3}
    fi

    good_msg "Creating the new Solr core."

    mkdir ${core}
    touch ${core}/core.properties
    cp -r ${solr_conf} ${core}/conf
    tc restart
    ;;

  'destroy')
    if [ ! -d ${core} ]; then
      bad_msg "${2} isn't a Solr core."
      exit 1
    fi

    good_msg "Destroying the ${2} Solr core."
    rm -r ${core}
    tc restart
    ;;

  'list')
    echo
    ignore="lib example_conf"
    for this_dir in $(find $solr_home -type d -maxdepth 1)
    do
      if [ "${this_dir}" == "${solr_home}" ]; then
        continue
      fi
      rel_dir=${this_dir#$solr_home/}
      if [ "${ignore}" == "${ignore/$rel_dir/}" ]; then
        echo "${rel_dir}"
      fi
    done
    echo
    ;;

  *)
    bad_msg "${err}"
    exit 1
    ;;
esac
